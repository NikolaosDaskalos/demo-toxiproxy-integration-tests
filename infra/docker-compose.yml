services:
  postgres:
    image: postgres:15
    container_name: postgres
    environment:
      POSTGRES_USER: demoUser
      POSTGRES_PASSWORD: demoPass
      POSTGRES_DB: demo_db
    healthcheck:
      test: [ "CMD-SHELL", "sh -c 'pg_isready'" ]
      interval: 2s
      timeout: 3s
      retries: 10
    ports:
      - "5432:5432"

  kafka:
    image: confluentinc/cp-kafka:7.4.0
    hostname: kafka
    container_name: kafka
    ports:
      - "9092:9092"
      - "9093:9093"
    environment:
      KAFKA_KRAFT_MODE: "true"  # This enables KRaft mode in Kafka.
      KAFKA_PROCESS_ROLES: controller,broker  # Kafka acts as both broker and controller.
      KAFKA_NODE_ID: 1  # A unique ID for this Kafka instance.
      KAFKA_CONTROLLER_QUORUM_VOTERS: "1@localhost:9094"  # Defines the controller voters.
      KAFKA_LISTENERS: PLAINTEXT_HOST://0.0.0.0:9092,PLAINTEXT://0.0.0.0:9093,CONTROLLER://0.0.0.0:9094
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT,CONTROLLER:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT_HOST://localhost:9092,PLAINTEXT://kafka:9093
      KAFKA_LOG_DIRS: /var/lib/kafka/data  # Where Kafka stores its logs.
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"  # Kafka will automatically create topics if needed.
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1  # Since weâ€™re running one broker, one replica is enough.
      KAFKA_LOG_RETENTION_HOURS: 168  # Keep logs for 7 days.
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0  # No delay for consumer rebalancing.
      CLUSTER_ID: "iy9F3LyjRs6fdqZbrHhymw"  # A unique ID for the Kafka cluster.
      KAFKA_CONFLUENT_SCHEMA_REGISTRY_URL: "http://schema-registry:8081"
#        KAFKA_CONFLUENT_BASIC_AUTH_CREDENTIALS_SOURCE: "USER_INFO"
#        KAFKA_CONFLUENT_BASIC_AUTH_USER_INFO: 'superUser:superUser'
#          volumes:
#            - /var/run/docker.sock:/var/run/docker.sock
#            - ./data:/var/lib/kafka/data  # Store Kafka logs on your local machine.
    command:
      - "/bin/bash"
      - "-c"
      - |
        # Start Kafka in the background
        /etc/confluent/docker/run &

        # Continuously check if Kafka is ready
        until kafka-topics --bootstrap-server kafka:9092 --list > /dev/null 2>&1; do
          echo "Waiting for Kafka to be ready..."
          sleep 2
        done

        # Kafka is ready, create the topic
        echo "Kafka is ready. Creating topic..."
        kafka-topics --bootstrap-server kafka:9092 --create --topic order-events --partitions 1 --replication-factor 1

        # Keep the container running (in the background)
        tail -f /dev/null

  schema-registry:
    image: confluentinc/cp-schema-registry:7.8.0
    #    hostname: schema-registry
    container_name: schema-registry
    depends_on:
      - kafka
    ports:
      - "8081:8081"
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8081
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: PLAINTEXT://kafka:9093
    volumes:
      - ./init-schema.sh:/scripts/init-schema.sh
      - ./schemas.sh:/scripts/schemas.sh
    entrypoint: [ "/bin/sh", "-c", "/scripts/init-schema.sh" ]